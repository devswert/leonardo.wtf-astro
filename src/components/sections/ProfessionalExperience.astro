---
import { getCollection, type CollectionEntry } from "astro:content";

import JobBox from "../JobBox.tsx";
import { getLangFromUrl, useTranslations } from "../../i18n/utils";
import BrandIcon from "../icons/BrandIcon.astro";

const jobs: Array<CollectionEntry<"jobs">> = (
  await getCollection("jobs")
).reverse();

const sideProjets: Array<CollectionEntry<"sideProjects">> = (
  await getCollection("sideProjects")
).reverse();

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<div class="text-brand-green px-5">
  <h2 class="font-hornbill text-4xl text-center mb-5">
    • <br />
    {t("experiences.professionalTitle")}
  </h2>

  {
    jobs.map((job) => (
      <JobBox client:load>
        <h3 slot="title" class="font-sora font-extrabold text-2xl">
          {job.data.company}
        </h3>

        <p slot="position" class="font-sora">
          {job.data.position}
        </p>

        {job.data.timeFrame && (
          <p slot="timeFrame" class="font-sora font-extralight text-xs">
            {t(job.data.timeFrame as keyof typeof t)}
          </p>
        )}

        <p slot="description" class="font-sora mt-4 whitespace-pre-line">
          {t(job.data.description as keyof typeof t)}
        </p>

        {job.data.tools.length > 0 && (
          <div slot="tools" class="flex flex-wrap gap-4">
            {job.data.tools.map((icon: string) => (
              <BrandIcon icon={icon} size={30} />
            ))}
          </div>
        )}
      </JobBox>
    ))
  }

  <h2 class="font-hornbill text-4xl text-center mt-12">
    • <br />
    {t("experiences.sideProjectsTitle")}
  </h2>

  {
    sideProjets.map((job) => (
      <JobBox descriptionAlwaysVisible={true} client:load>
        <h3 slot="title" class="font-sora font-extrabold text-2xl">
          {job.data.company}
        </h3>

        <p slot="position" class="font-sora">
          {t(job.data.date as keyof typeof t)}
        </p>

        <p slot="description" class="font-sora mt-4 whitespace-pre-line">
          {t(job.data.description as keyof typeof t)}
        </p>

        {job.data.tools.length > 0 && (
          <div slot="tools" class="flex flex-wrap gap-4">
            {job.data.tools.map((icon: string) => (
              <BrandIcon icon={icon} size={30} />
            ))}
          </div>
        )}
      </JobBox>
    ))
  }
</div>
